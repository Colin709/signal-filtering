classdef Filters
    % FILTER creates four filters and contains the class function to plot
    %   the filter response and filtered signals
    
    properties
        LPF
        HPF
        BPF
        BSF
    end
    
    methods(Static)
        
        % design_filters() creates a structure that contains four minimum order
        %   FIR filters based on the sampling rate of the original signal
        % frequency band values are hard coded and tuned values depend on the
        %   signal and application
        function obj = Filters(samp_rate)
            
            % low-pass FIR min-order filter
            obj.LPF = designfilt('lowpassfir', ...
                'PassbandFrequency',650,'StopbandFrequency',700,...
                'StopbandAttenuation',80,'PassbandRipple',1,...
                'DesignMethod','equiripple','SampleRate',samp_rate);
            
            % high-pass FIR min-order filter
            obj.HPF = designfilt('highpassfir',...
                'PassbandFrequency',85,'StopbandFrequency',70,...
                'StopbandAttenuation',80,'PassbandRipple',1,...
                'DesignMethod','equiripple','SampleRate',samp_rate);
            
            % band-pass FIR min-order filter
            obj.BPF = designfilt('bandpassfir', ...
                'StopbandFrequency1',70,'PassbandFrequency1',85,...
                'PassbandFrequency2',650,'StopbandFrequency2',700,...
                'StopbandAttenuation1',80,'PassbandRipple',1,...
                'StopbandAttenuation2',80,'DesignMethod','equiripple',...
                'SampleRate',samp_rate);
            
            % band-stop FIR min-order filter
            obj.BSF = designfilt('bandstopfir', ...
                'StopbandFrequency1',250,'PassbandFrequency1',230,...
                'PassbandFrequency2',350,'StopbandFrequency2',330,...
                'StopbandAttenuation',80,'PassbandRipple1',1,...
                'PassbandRipple2',1,'DesignMethod','equiripple',...
                'SampleRate',samp_rate);
        end
        
    end
    
end

