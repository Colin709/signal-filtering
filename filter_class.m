%%%%%%%%%Signal Class%%%%%%%%%%%%%%%%%%%
% MATLAB Code for Signal Class
% DSP Assignment
% Memorial University of Newfoundland
% Colin King - 200842029 - cbk618
% July 13, 2018
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

classdef filter_class
    %FILTER_CLASS designs the filter based on user input
    %currently don't need constructor
    %filter structure passed in and design function used creates obj
    
    properties
    end
    
    methods (Static)
        
        function designed_filter = filterDesign(filter_s,samplingf,argument_s)
            % DESIGNED_FILTER - design either FIR or IIR filter
            
            if strcmp(filter_s.IIR_FIR,'FIR')
                designed_filter = ...
                    filter_class.FIR_filterDesign(filter_s,samplingf,argument_s);
            elseif strcmp(filter_s.IIR_FIR,'IIR')
                designed_filter = ...
                    filter_class.IIR_filterDesign(filter_s,samplingf,argument_s);
            else
                error('Not a valid filter design. Specify FIR or IIR')
            end
        end
        
        
        function FIR_filter = FIR_filterDesign(filter_in,sampf,argument_in)
            %FIR_FILTERDESIGN - creates FIR filter
            
            if  strcmp(filter_in.response,'LPF')
                FIR_filter = designfilt('lowpassfir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'CutoffFrequency',filter_in.cutoff_frequency, ...
                    'DesignMethod','window', ...
                    'Window',{@kaiser,3},'SampleRate',sampf);
            elseif strcmp(filter_in.response,'HPF')
                FIR_filter = designfilt('highpassfir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'CutoffFrequency',filter_in.cutoff_frequency, ...
                    'DesignMethod','window', ...
                    'Window',{@kaiser,3},'SampleRate',sampf);
            elseif strcmp(filter_in.response,'BPF')
                FIR_filter = designfilt('bandpassfir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'CutoffFrequency1',filter_in.cutoff_frequency(1),...
                    'CutoffFrequency2',filter_in.cutoff_frequency(2), ...
                    'DesignMethod','window', ...
                    'Window',{@kaiser,3},'SampleRate',sampf);
            elseif strcmp(filter_in.response,'BSF')
                FIR_filter = designfilt('bandstopfir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'CutoffFrequency1',filter_in.cutoff_frequency(1),...
                    'CutoffFrequency2',filter_in.cutoff_frequency(2), ...
                    'DesignMethod','window', ...
                    'Window',{@kaiser,3},'SampleRate',sampf);
            else
                error('the specified filter is invalid.')
            end
        end
        
        function IIR_filter = IIR_filterDesign(filter_in,sampf,argument_in)
            %IIR_FILTERDESIGN - creates IIR filter
            
            if  strcmp(filter_in.response,'LPF')
                IIR_filter = designfilt('lowpassiir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'PassbandFrequency',filter_in.cutoff_frequency, ...
                    'PassbandRipple',filter_in.the_ripple, ...
                    'SampleRate',sampf);
            elseif strcmp(filter_in.response,'HPF')
                IIR_filter = designfilt('highpassiir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'PassbandFrequency',filter_in.cutoff_frequency, ...
                    'PassbandRipple',filter_in.the_ripple, ...
                    'SampleRate',sampf);
            elseif strcmp(filter_in.response,'BPF')
                IIR_filter = designfilt('bandpassiir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'HalfPowerFrequency1',filter_in.cutoff_frequency(1),...
                    'HalfPowerFrequency2',filter_in.cutoff_frequency(2),...
                    'SampleRate',sampf);
            elseif strcmp(filter_in.response,'BSF')
                IIR_filter = designfilt('bandstopiir', ...
                    'FilterOrder',filter_in.the_order, ...
                    'HalfPowerFrequency1',filter_in.cutoff_frequency(1),...
                    'HalfPowerFrequency2',filter_in.cutoff_frequency(2),...
                    'SampleRate',sampf);
            else
                error('the specified filter is invalid.')
            end
        end
        
        
    end
end