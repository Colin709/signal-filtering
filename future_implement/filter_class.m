%%%%%%%%%Signal Class%%%%%%%%%%%%%%%%%%%
% MATLAB Code for Signal Class
% DSP Assignment
% Memorial University of Newfoundland
% Colin King - 200842029 - cbk618
% July 13, 2018
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

classdef filter_class
    %FILTER_CLASS designs the filter based on user input
    %currently don't need constructor
    %filter structure passed in and design function used creates obj
    
    properties
    end
    
    methods(Static)
        
        function designed_filter = ...
                filterDesign(filter_s,samplingf)
            % DESIGNED_FILTER - design either fir or iir filter
            
            filter_s.SampleRate = samplingf;
            
            if strcmp(filter_s.design,'Custom Design')
                designed_filter = ...
                    filter_class.Cust_filterDesign(filter_s);
            elseif strcmp(filter_s.design,'Minimum Order')
                designed_filter = ...
                    filter_class.MinOrder_filterDesign(filter_s);
            else
                error('Not a valid filter design')
            end
        end
        
        
        function Cust_filter = Cust_filterDesign(filterCust)
            %fir_FILTERDESIGN - creates fir filter
            
            if strcmp(filterMin.design_method,'kaiserwin')
                error('filter method not available for custom filter')
            end
            
            if  strcmp(filterCust.response,'lowpass')
                Cust_filter = designfilt(filterCust.irResponse, ...
                    'PassbandFrequency',...
                    filterCust.PassbandFrequency, ...
                    'StopbandFrequency',...
                    filterCust.StopbandFrequency,...
                    'StopbandAttenuation',...
                    filterCust.StopbandAttenuation,...
                    'PassbandRipple',...
                    filterCust.PassbandRipple,...
                    'DesignMethod',filterCust.design_method,...
                    'SampleRate',filterCust.SampleRate);
            elseif strcmp(filterMin.response,'highpass')
                Cust_filter = designfilt(filterCust.irResponse, ...
                    'PassbandFrequency', ...
                    filterCust.PassbandFrequency,...
                    'StopbandFrequency', ...
                    filterMin.StopbandFrequency,...
                    'StopbandAttenuation',...
                    filterMin.StopbandAttenuation,...
                    'PassbandRipple',...
                    filterMin.PassbandRipple,...
                    'DesignMethod',filterMin.design_method,...
                    'SampleRate',filterMin.SampleRate);
            elseif strcmp(filterMin.response,'bandpass')
                Cust_filter = designfilt(filterMin.irResponse, ...
                    'PassbandFrequency1', ...
                    filterMin.PassbandFrequency,...
                    'StopbandFrequency1', ...
                    filterMin.StopbandFrequency,...
                    'PassbandFrequency2', ...
                    filterMin.PassbandFrequency2,...
                    'StopbandFrequency2', ...
                    filterMin.StopbandFrequency2,...
                    'StopbandAttenuation1',...
                    filterMin.StopbandAttenuation,...
                    'PassbandRipple',...
                    filterMin.PassbandRipple,...
                    'StopbandAttenuation2',...
                    filterMin.StopbandAttenuation2,...
                    'DesignMethod',filterMin.design_method,...
                    'SampleRate',filterMin.SampleRate);
            elseif strcmp(filterMin.response,'bandstop')
                Cust_filter = designfilt(filterMin.irResponse, ...
                    'PassbandFrequency1', ...
                    filterMin.PassbandFrequency,...
                    'StopbandFrequency1', ...
                    filterMin.StopbandFrequency,...
                    'PassbandFrequency2', ...
                    filterMin.PassbandFrequency2,...
                    'StopbandFrequency2', ...
                    filterMin.StopbandFrequency2,...
                    'StopbandAttenuation',...
                    filterMin.StopbandAttenuation,...
                    'PassbandRipple1',...
                    filterMin.PassbandRipple,...
                    'PassbandRipple2',...
                    filterMin.PassbandRipple2,...
                    'DesignMethod',filterMin.design_method,...
                    'SampleRate',filterMin.SampleRate);
            else
                error('the specified filter is invalid. (Or not implemented)')
            end
        end 
            
            
            function MinOrder_filter = MinOrder_filterDesign(filterMin)
                %MINORDER_FILTERDESIGN - creates a min order filter
                
                if strcmp(filterMin.design_method,'window') || ...
                        strcmp(filterMin.design_method,'cls') || ...
                        strcmp(filterMin.design_method,'ls')
                    error('filter method not available for minimum order')
                end
                
                if  strcmp(filterMin.response,'lowpass')
                    MinOrder_filter = designfilt(filterMin.irResponse, ...
                        'PassbandFrequency',...
                        filterMin.PassbandFrequency, ...
                        'StopbandFrequency',...
                        filterMin.StopbandFrequency,...
                        'StopbandAttenuation',...
                        filterMin.StopbandAttenuation,...
                        'PassbandRipple',...
                        filterMin.PassbandRipple,...
                        'DesignMethod',filterMin.design_method,...
                        'SampleRate',filterMin.SampleRate);
                elseif strcmp(filterMin.response,'highpass')
                    MinOrder_filter = designfilt(filterMin.irResponse, ...
                        'PassbandFrequency', ...
                        filterMin.PassbandFrequency,...
                        'StopbandFrequency', ...
                        filterMin.StopbandFrequency,...
                        'StopbandAttenuation',...
                        filterMin.StopbandAttenuation,...
                        'PassbandRipple',...
                        filterMin.PassbandRipple,...
                        'DesignMethod',filterMin.design_method,...
                        'SampleRate',filterMin.SampleRate);
                elseif strcmp(filterMin.response,'bandpass')
                    MinOrder_filter = designfilt(filterMin.irResponse, ...
                        'PassbandFrequency1', ...
                        filterMin.PassbandFrequency,...
                        'StopbandFrequency1', ...
                        filterMin.StopbandFrequency,...
                        'PassbandFrequency2', ...
                        filterMin.PassbandFrequency2,...
                        'StopbandFrequency2', ...
                        filterMin.StopbandFrequency2,...
                        'StopbandAttenuation1',...
                        filterMin.StopbandAttenuation,...
                        'PassbandRipple',...
                        filterMin.PassbandRipple,...
                        'StopbandAttenuation2',...
                        filterMin.StopbandAttenuation2,...
                        'DesignMethod',filterMin.design_method,...
                        'SampleRate',filterMin.SampleRate);
                elseif strcmp(filterMin.response,'bandstop')
                    MinOrder_filter = designfilt(filterMin.irResponse, ...
                        'PassbandFrequency1', ...
                        filterMin.PassbandFrequency,...
                        'StopbandFrequency1', ...
                        filterMin.StopbandFrequency,...
                        'PassbandFrequency2', ...
                        filterMin.PassbandFrequency2,...
                        'StopbandFrequency2', ...
                        filterMin.StopbandFrequency2,...
                        'StopbandAttenuation',...
                        filterMin.StopbandAttenuation,...
                        'PassbandRipple1',...
                        filterMin.PassbandRipple,...
                        'PassbandRipple2',...
                        filterMin.PassbandRipple2,...
                        'DesignMethod',filterMin.design_method,...
                        'SampleRate',filterMin.SampleRate);
                else
                    error('the specified filter is invalid.')
                end
            end
            
            
            
        end
        
        
end
